{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="en">\
<head>\
  <meta charset="UTF-8">\
  <meta name="viewport" content="width=device-width, initial-scale=1.0">\
  <title>Line Memorization</title>\
  <style>\
    body \{ font-family: Arial, sans-serif; margin: 20px; \}\
    .hidden \{ display: none; \}\
  </style>\
</head>\
<body>\
  <h1>Memorize Your Lines</h1>\
  <input type="file" id="upload" accept=".txt">\
  <select id="character-select">\
    <option value="">Select Your Character</option>\
  </select>\
  <div id="script-display"></div>\
\
  <script>\
    const uploadInput = document.getElementById('upload');\
    const characterSelect = document.getElementById('character-select');\
    const scriptDisplay = document.getElementById('script-display');\
    let scriptData = \{\};\
\
    // Handle File Upload\
    uploadInput.addEventListener('change', (event) => \{\
      const file = event.target.files[0];\
      const reader = new FileReader();\
\
      reader.onload = () => \{\
        const lines = reader.result.split('\\n');\
        scriptData = \{\};\
        lines.forEach(line => \{\
          const [character, ...dialogue] = line.split(':');\
          if (character && dialogue.length) \{\
            if (!scriptData[character.trim()]) scriptData[character.trim()] = [];\
            scriptData[character.trim()].push(dialogue.join(':').trim());\
          \}\
        \});\
\
        populateCharacters();\
      \};\
\
      reader.readAsText(file);\
    \});\
\
    // Populate Character Dropdown\
    function populateCharacters() \{\
      characterSelect.innerHTML = '<option value="">Select Your Character</option>';\
      Object.keys(scriptData).forEach(character => \{\
        const option = document.createElement('option');\
        option.value = character;\
        option.textContent = character;\
        characterSelect.appendChild(option);\
      \});\
    \}\
\
    // Display Script with Filtering\
    characterSelect.addEventListener('change', () => \{\
      const selectedCharacter = characterSelect.value;\
      scriptDisplay.innerHTML = '';\
\
      Object.entries(scriptData).forEach(([character, lines]) => \{\
        lines.forEach(line => \{\
          const lineElement = document.createElement('div');\
          lineElement.textContent = `$\{character\}: $\{line\}`;\
          if (character === selectedCharacter) lineElement.classList.add('hidden');\
          scriptDisplay.appendChild(lineElement);\
        \});\
      \});\
    \});\
  </script>\
</body>\
</html>\
}